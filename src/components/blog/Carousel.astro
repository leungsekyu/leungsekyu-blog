---
import { Image } from 'astro:assets'
import type { ImageMetadata } from 'astro'

interface LocalImage {
  src: ImageMetadata
  alt: string
}

interface Props {
  id: string
  slides: LocalImage[]
}

const { id, slides } = Astro.props
---

<div class="swiper mt-8" data-carousel-id={id}>
  <div class="swiper-wrapper">
    {
      slides.map((slide) => (
        <div class="swiper-slide flex flex-col items-center justify-center">
          <Image src={slide.src} alt={slide.alt} />
          <p class="mt-2 pb-4 text-center">{slide.alt}</p>
        </div>
      ))
    }
  </div>

  <div class="swiper-button-prev"></div>
  <div class="swiper-button-next"></div>

  <div class="swiper-pagination"></div>
</div>

<style lang="scss">
  .swiper {
    // 容器基础样式
    width: 100%;
    max-width: 653.109px;
    aspect-ratio: 4/3;
    height: auto;

    // 分页器样式变量
    --swiper-theme-color: #333;
    --swiper-pagination-bullet-inactive-color: #999;
    --swiper-pagination-bullet-inactive-opacity: 0.8;

    // 幻灯片样式
    &-slide {
      display: flex;
      padding-bottom: 2rem;

      img {
        width: auto;
        height: auto;
        max-width: 100%;
        max-height: calc(100% - 2rem);
      }
    }

    // 导航按钮样式（桌面端）
    &-button-prev,
    &-button-next {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background-color: rgba(255, 255, 255, 0.9);
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
      transition: all 0.3s ease;

      &::after {
        font-size: 16px;
        color: #333;
      }

      &:hover {
        background-color: rgba(255, 255, 255, 1);
        box-shadow: 0 3px 8px rgba(0, 0, 0, 0.2);
      }
    }

    // 平板端响应式样式
    @media (max-width: 768px) {
      aspect-ratio: 4/5;

      &-button-prev,
      &-button-next {
        width: 32px;
        height: 32px;

        &::after {
          font-size: 14px;
        }
      }
    }

    // 移动端响应式样式
    @media (max-width: 480px) {
      .swiper-button-prev,
      .swiper-button-next {
        display: none; // 移动端隐藏箭头
      }
    }
  }
</style>

<script>
  // 导入必要的模块和样式
  import Swiper from 'swiper'
  import { Navigation, Pagination, Autoplay } from 'swiper/modules'

  // 导入 Swiper 样式
  import 'swiper/css'
  import 'swiper/css/navigation'
  import 'swiper/css/pagination'
  import 'swiper/css/autoplay'

  // 存储所有 Swiper 实例
  const swiperInstances = new Map()

  // Swiper 配置选项
  const swiperConfig = {
    modules: [Navigation, Pagination, Autoplay],
    // loop: true,
    speed: 800,

    // 导航按钮配置
    navigation: {
      prevEl: '.swiper-button-prev',
      nextEl: '.swiper-button-next',
    },

    // 分页器配置
    pagination: {
      el: '.swiper-pagination',
      clickable: true,
    },

    // 自动播放配置
    // autoplay: {
    //   delay: 2500,
    //   pauseOnTouch: true,
    //   pauseOnMouseEnter: true,
    //   disableOnInteraction: true,
    // },
  }

  // 初始化 Swiper 实例
  function initializeSwiper(element: Element) {
    const carouselId = element.getAttribute('data-carousel-id')
    const swiper = new Swiper(`[data-carousel-id="${carouselId}"]`, swiperConfig)

    swiperInstances.set(carouselId, swiper)
    console.log(`Swiper 组件 ${carouselId} 被初始化`)
  }

  // 销毁 Swiper 实例
  function destroySwiper(swiper: Swiper, id: string) {
    if (swiper) {
      swiper.destroy(true, true)
      console.log(`Swiper 组件 ${id} 被销毁`)
    }
  }

  // 页面加载时初始化所有 Swiper
  document.addEventListener('astro:page-load', () => {
    const swiperElements = document.querySelectorAll('.swiper')
    swiperElements.forEach(initializeSwiper)
  })

  // 页面切换前清理所有 Swiper 实例
  document.addEventListener('astro:before-preparation', () => {
    swiperInstances.forEach(destroySwiper)
    swiperInstances.clear()
  })
</script>
